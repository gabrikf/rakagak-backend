{
    "openapi": "3.0.0",
    "info": {
        "title": "RakagaK",
        "description": "This is an Api for RakagaK - Meme's social media",
        "version": "1.0.0"
    },
    "components": {
        "securitySchemes": {
            "jwt": {
                "type": "http",
                "scheme": "bearer",
                "in": "header",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "jwt": []
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Listing all users",
                "description": "Listing all users paginated with options to filter by fullname or nickname",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "user_reference",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "description": "Create a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "type": "string"
                                    }
                                },
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "full_name": "Teste da Silva",
                                "nickname": "testezin_silva",
                                "email": "teste@silva.com",
                                "password": "yourpassword"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": [
                        {
                            "description": "This email is already being used"
                        },
                        {
                            "description": "This nickname is already being used"
                        }
                    ]
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by id",
                "description": "Return user information by your id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description":"uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Authorization route",
                "description": "This route is used to log in",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "login": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            },
                            "example": {
                                "login": "teste@silva.com",
                                "password": "yourpassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "Login or password incorrect."
                    }
                }
            }
        },
        "/users/update": {
            "put": {
                "tags": [
                    "User"
                ],
            
                "summary": "Update User",
                "description": "This route is used to update a user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "type": "string"
                                    },                                  
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "isPrivate": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "example": {
                                "id": "3123124124515",
                                "full_name": "Teste da Silva",
                                "nickname": "testezin_silva",
                                "email": "teste@silva.com",
                                "password": "yourpassword",
                                "isPrivate": "boolean"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "404": {
                        "description": "User not found."
                    }
                }
            }
        },
        "/post": {
            "post": {
                "tags": [
                    "Posts"
                ],
            
                "summary": "Create Post",
                "description": "This route is used to create a post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "postDescription ": {
                                        "type": "string"
                                    },
                                    "img_url": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "postDescription": "post description test",
                                    "img_url": "img_url"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Created"
                        },
                        "404": {
                            "description": "User not found."
                        }
                    }
                }
            }
        },
        "/followers/{id}": {
            "post": {
                "tags": [
                    "Followers"
                ],
            
                "summary": "Request to follow a user",
                "description": "This route is used to create a request for add a user as a follower",
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"requested user id",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }

                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Users can create only one solicitation!"
                    },
                    "404": {
                        "description": "This user does not exist!"
                    }
                }
            
        },
        "delete": {
            "tags": [
                "Followers"
            ],
        
            "summary": "Request to delete a follower relation",
            "description": "This route is used to when user wants to refuse a follow request, remove a follower or unblock some user",
            "parameters":[
                {
                    "name":"id",
                    "in":"path",
                    "description":"requester user id",
                    "required":true,
                    "schema":{
                        "type":"string"
                    }
                }

            ],
            "responses": {
                "201": {
                    "description": "Created"
                },
                "400": {
                    "description": "Users can create only one solicitation!"
                },
                "404": {
                    "description": "This user does not exist!"
                }
            }
        }
    },
    "/followers/{id}/unfollow": {
    "delete": {
        "tags": [
            "Followers"
        ],
    
        "summary": "Request to delete a follower relation",
        "description": "This route is used to unfollow some one ",
        "parameters":[
            {
                "name":"id",
                "in":"path",
                "description":"requester user id",
                "required":true,
                "schema":{
                    "type":"string"
                }
            }

        ],
        "responses": {
            "201": {
                "description": "Created"
            },
            "400": {
                "description": "Users can create only one solicitation!"
            },
            "404": {
                "description": "This user does not exist!"
            }
        }
    }
},
        "/followers": {
            "get": {
                "tags": [
                    "Followers"
                ],
                "summary": "List Pending Requests",
                "description": "Listing all pending requests paginated by user",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "requestedUserId": {
                                                "type": "string"
                                            },
                                            "requesterUserId": {
                                                "type": "string"
                                            },
                                            "fStatus": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string"
                                            },
                                            "updated_at": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Public users do not receive friend request."
                    }
                }
            },
            "put": {
                "tags": [
                    "Followers"
                ],
            
                "summary": "Update a follower status",
                "description": "This route is used to accept or block a user in follower relation",
                "parameters":[
                    {
                        "name":"id",
                        "in":"query",
                        "description":"requester user id",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    },
                    {
                        "name":"status",
                        "in":"query",
                        "description":"A = Accept; B = Block // Default = A",
                        "required":false,
                        "schema":{
                            "type":"char"
                        }
                    }

                ],
                "responses": {
                    "204": {
                        "description": "Updated"
                    },
                    "404": {
                        "description": "Relation not found."
                    }
                }
            }
        }
    }
}